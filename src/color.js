export default {
  /*
    Жизненный цикл директивы:
    Вызываются хуки у директивы так же как и у компонентов, но они свои.

    bind - вызывается тогда когда директива инициализируется. Привязывается
    к элементу внутри Shadow DOM-а.

    update - вызывается случае когда обновить DOM дерево и затрагивает нашу
    директиву. Если обновится родительский компонент, но не обновлялись еще
    дочерние компоненты.

    componentUpdated - вызывается случае, когда обновились какие-то дочерние
    элементы, которые есть у нашей директивы.

    unbind - вызывается в случае, когда наша директива прекращает своё
    существование и убирается с DOM дерева. Помож на метод destroy в различных либах.

    ===========================================================================
    Параметры в методах директивы:
    el- элемент, к которому привызяваемся.
    bindings - все свойства которые будем передавать внутрь директивы. ReadOnly.
    vnode - объект виртуального дерева где будет хранится директива. ReadOnly.
    olvVnode - хранится старая виртуальная нода, которая была еще до обновления
    этой директивой
  */
  bind(el, bindings, vnode) {
    console.log('bind');
    el.style.color = 'red';
  },

  inserted(el, bindings, vnode) {
    console.log('inserted');
  },

  update(el, bindings, vnode, olvVnode) {
    console.log('update');
  },

  componentUpdated(el, bindings, vnode, olvVnode) {
    console.log('componentUpdated');
  },

  unbind() {
    console.log('unbind');
  }
};
